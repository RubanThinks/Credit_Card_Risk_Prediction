# -*- coding: utf-8 -*-
"""credit_risk.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_zsDJyo95kXHEzMLSO3yfUpTLu6VuPV7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
data=pd.read_csv('/content/credit_risk_dataset.csv')
data.head()

data.info()

data.isnull().sum()

data.isna()

data.drop(["person_emp_length","loan_int_rate"],axis=1)

data.info()

data.describe()

data.shape

data["loan_status"].value_counts()

data['loan_status'].unique()

data["loan_status"].plot(kind="hist")

columns_to_convert=["person_age","person_income","person_home_ownership","person_emp_length","loan_grade","loan_amnt","loan_int_rate","loan_status","loan_percent_income","cb_person_default_on_file","cb_person_cred_hist_length"]
data[columns_to_convert] = data[columns_to_convert].apply(pd.to_numeric, errors='coerce')
print(data.head())
print(data.dtypes)

data.info()

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

data = pd.get_dummies(data, drop_first=True)
X = data.drop('loan_status', axis=1)
y = data['loan_status']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

dt_model = DecisionTreeClassifier(criterion='gini', max_depth=5, random_state=42)
dt_model.fit(X_train, y_train)

y_pred = dt_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)


print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))


print("Classification Report:\n", classification_report(y_test, y_pred))

from sklearn import tree
import matplotlib.pyplot as plt

plt.figure(figsize=(20,10))
tree.plot_tree(dt_model, filled=True, feature_names=X.columns, class_names=['Good', 'Bad'])
plt.show()

print(data.isnull())

data.to_pickle("my_dataframe.pkl")
print("DataFrame saved to my_dataframe.pkl")

loaded_df = pd.read_pickle("my_dataframe.pkl")

print("DataFrame loaded from my_dataframe.pkl")
print(loaded_df)



data.info()

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# 
# import streamlit as st
# import pandas as pd
# import numpy as np
# import matplotlib.pyplot as plt
# import seaborn as sns
# import pickle
# 
# def main():
#   colA1, colA2 = st.beta_columns(2)
#   with colA1:
#     st.info("loan_status")
#     person_amount = st.number_input("How many trees are planted", value=500, step=100)
# 
#

# Commented out IPython magic to ensure Python compatibility.
# %%writefile pickle_app.py
# # write app to sandbox
# 
# import streamlit as st
# import numpy as np
# 
# # define your app content
# def main():
# 
#   colA1, colA2 = st.beta_columns(2)
#   with colA1:
#     st.info("Number of trees")
#     trees_amount = st.number_input("How many trees are planted", value=500, step=100)
# 
#   with colA2:
#     st.info("Money invested")
#     investment_amount = st.number_input("currency is USD", value=50000, step=10000)
# 
#   input = np.array([[trees_amount, investment_amount]]).astype(np.float64)
# 
# 
# # execute the main function
# if __name__ == '__main__':
# 	main()